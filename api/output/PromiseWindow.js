Ext.data.JsonP.PromiseWindow({"tagname":"class","name":"PromiseWindow","autodetected":{},"files":[{"filename":"promise-window.js","href":"promise-window.html#PromiseWindow"}],"params":[{"tagname":"params","type":"String","name":"uri","doc":"<p>Destination URI</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"config","doc":"<p>Configuration object. See description below.</p>\n","properties":[{"tagname":"params","type":"Number","name":"width","doc":"<p>Width of the popup window. Defaults to the current document width.</p>\n","html_type":"Number"},{"tagname":"params","type":"Number","name":"height","doc":"<p>Height of the popup window. Defaults to the current document height.</p>\n","html_type":"Number"},{"tagname":"params","type":"Function","name":"promiseProvider","doc":"<p>Promise provider. Should return a plain object containing 3 fields:\n                                         - <code>promise</code> {Promise}  a new Promise object\n                                         - <code>resolve</code> {Function} the method to resolve the given Promise\n                                         - <code>reject</code>  {Function} the method to reject the given Promise</p>\n","html_type":"Function"},{"tagname":"params","type":"Function","name":"onPostMessage","doc":"<p>Handler for receiving a postMessage from the opened window. Default\n                                         implementation resolves the promise with the data passed in the post\n                                         message, except if this data contains an <code>error</code> field. In this case,\n                                         it rejects the Promise with the value of that field. In all cases, closes\n                                         the popup window.</p>\n","properties":[{"tagname":"params","type":"Function","name":"event","doc":"<p>Event The postMessage event</p>\n","html_type":"Function"}],"html_type":"Function"},{"tagname":"params","type":"Number","name":"watcherDelay","doc":"<p>There is no programmatic way of knowing when a popup window is closed\n                                         (either manually or programatically). For this reason, every time\n                                         PromiseWindow opens a popup, a new watcher is created. The watcher checks\n                                         regularly if the window is still open. This value defines at which\n                                         interval this check is done. Defaults to 100ms.</p>\n","html_type":"Number"},{"tagname":"params","type":"String","name":"windowName","doc":"<p>Name to be ginven to the popup window. See <code>window.open</code> references for\n                                         details. If <code>null</code>, a random name is generated.</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"window","doc":"<p>Object containing window configuration settings. Scrollbars are enabled\n                                         by default. All <code>window.open</code> ptions are accepted, but please note that\n                                         many of them have no effect in most modern browsers. See\n                                         https://developer.mozilla.org/en-US/docs/Web/API/Window/open for more\n                                         details.</p>\n","html_type":"Object"}],"html_type":"Object"}],"members":[{"name":"defaultConfig","tagname":"property","owner":"PromiseWindow","id":"property-defaultConfig","meta":{}},{"name":"constructor","tagname":"method","owner":"PromiseWindow","id":"method-constructor","meta":{}},{"name":"_createPromise","tagname":"method","owner":"PromiseWindow","id":"method-_createPromise","meta":{"protected":true}},{"name":"_getCenteredPosition","tagname":"method","owner":"PromiseWindow","id":"method-_getCenteredPosition","meta":{"protected":true}},{"name":"_getFeatures","tagname":"method","owner":"PromiseWindow","id":"method-_getFeatures","meta":{"protected":true}},{"name":"_isBoolean","tagname":"method","owner":"PromiseWindow","id":"method-_isBoolean","meta":{"protected":true}},{"name":"_isWindowAlive","tagname":"method","owner":"PromiseWindow","id":"method-_isWindowAlive","meta":{"protected":true}},{"name":"_onPostMessage","tagname":"method","owner":"PromiseWindow","id":"method-_onPostMessage","meta":{"protected":true}},{"name":"_serializeFeatureValue","tagname":"method","owner":"PromiseWindow","id":"method-_serializeFeatureValue","meta":{"protected":true}},{"name":"_startWatcher","tagname":"method","owner":"PromiseWindow","id":"method-_startWatcher","meta":{"protected":true}},{"name":"_stopWatcher","tagname":"method","owner":"PromiseWindow","id":"method-_stopWatcher","meta":{"protected":true}},{"name":"close","tagname":"method","owner":"PromiseWindow","id":"method-close","meta":{}},{"name":"isOpen","tagname":"method","owner":"PromiseWindow","id":"method-isOpen","meta":{}},{"name":"open","tagname":"method","owner":"PromiseWindow","id":"method-open","meta":{}},{"name":"setURI","tagname":"method","owner":"PromiseWindow","id":"method-setURI","meta":{"chainable":true}},{"name":"getAPlusPromiseProvider","tagname":"method","owner":"PromiseWindow","id":"static-method-getAPlusPromiseProvider","meta":{"static":true}},{"name":"open","tagname":"method","owner":"PromiseWindow","id":"static-method-open","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-PromiseWindow","short_doc":"Create a new PromiseWindow object\n\nDuring the lifecycle of this object, popup windows can be opened, closed,\nand reop...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/promise-window.html#PromiseWindow' target='_blank'>promise-window.js</a></div></pre><div class='doc-contents'><p>Create a new PromiseWindow object</p>\n\n<p>During the lifecycle of this object, popup windows can be opened, closed,\nand reopened again. However, it'</p>\n\n<p>Instanciating this prototype does not immediately opens a new popup window.\nTo open the window, use <code>open()</code> on the created object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : String<div class='sub-desc'><p>Destination URI</p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Configuration object. See description below.</p>\n<ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>Width of the popup window. Defaults to the current document width.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>Height of the popup window. Defaults to the current document height.</p>\n</div></li><li><span class='pre'>promiseProvider</span> : Function<div class='sub-desc'><p>Promise provider. Should return a plain object containing 3 fields:\n                                         - <code>promise</code> {Promise}  a new Promise object\n                                         - <code>resolve</code> {Function} the method to resolve the given Promise\n                                         - <code>reject</code>  {Function} the method to reject the given Promise</p>\n</div></li><li><span class='pre'>onPostMessage</span> : Function<div class='sub-desc'><p>Handler for receiving a postMessage from the opened window. Default\n                                         implementation resolves the promise with the data passed in the post\n                                         message, except if this data contains an <code>error</code> field. In this case,\n                                         it rejects the Promise with the value of that field. In all cases, closes\n                                         the popup window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Function<div class='sub-desc'><p>Event The postMessage event</p>\n</div></li></ul></div></li><li><span class='pre'>watcherDelay</span> : Number<div class='sub-desc'><p>There is no programmatic way of knowing when a popup window is closed\n                                         (either manually or programatically). For this reason, every time\n                                         PromiseWindow opens a popup, a new watcher is created. The watcher checks\n                                         regularly if the window is still open. This value defines at which\n                                         interval this check is done. Defaults to 100ms.</p>\n</div></li><li><span class='pre'>windowName</span> : String<div class='sub-desc'><p>Name to be ginven to the popup window. See <code>window.open</code> references for\n                                         details. If <code>null</code>, a random name is generated.</p>\n</div></li><li><span class='pre'>window</span> : Object<div class='sub-desc'><p>Object containing window configuration settings. Scrollbars are enabled\n                                         by default. All <code>window.open</code> ptions are accepted, but please note that\n                                         many of them have no effect in most modern browsers. See\n                                         https://developer.mozilla.org/en-US/docs/Web/API/Window/open for more\n                                         details.</p>\n</div></li></ul></div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-defaultConfig' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-property-defaultConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-property-defaultConfig' class='name expandable'>defaultConfig</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Default configuration</p>\n</div><div class='long'><p>Default configuration</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/PromiseWindow-method-constructor' class='name expandable'>PromiseWindow</a>( <span class='pre'></span> ) : <a href=\"#!/api/PromiseWindow\" rel=\"PromiseWindow\" class=\"docClass\">PromiseWindow</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/PromiseWindow\" rel=\"PromiseWindow\" class=\"docClass\">PromiseWindow</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_createPromise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_createPromise' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_createPromise' class='name expandable'>_createPromise</a>( <span class='pre'></span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Creates a new Promise, using config.promiseProvider, and save reject and\nresolve methods for later. ...</div><div class='long'><p>Creates a new Promise, using <code>config.promiseProvider</code>, and save reject and\nresolve methods for later.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>Returns the new Promise object created by the configured\n                  Promise Provider.</p>\n</div></li></ul></div></div></div><div id='method-_getCenteredPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_getCenteredPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_getCenteredPosition' class='name expandable'>_getCenteredPosition</a>( <span class='pre'>width, height</span> ) : Object<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the left and top position in the screen for a rectangle, taking\ndual-screen position into account ...</div><div class='long'><p>Get the left and top position in the screen for a rectangle, taking\ndual-screen position into account</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>Width of the rectangle</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>Height of the rectangle</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>position A new object representing the position of the rectangle, centered</p>\n</div></li></ul></div></div></div><div id='method-_getFeatures' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_getFeatures' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_getFeatures' class='name expandable'>_getFeatures</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Generates window features based on the current configuration ...</div><div class='long'><p>Generates window features based on the current configuration</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns window features compatible with <code>window.open</code></p>\n</div></li></ul></div></div></div><div id='method-_isBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_isBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_isBoolean' class='name expandable'>_isBoolean</a>( <span class='pre'>value</span> ) : boolean<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Checks whether a value is a boolean ...</div><div class='long'><p>Checks whether a value is a boolean</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : *<div class='sub-desc'><p>The value to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>boolean</span><div class='sub-desc'><p><code>true</code> if value is a boolean, <code>false</code> otherwise</p>\n</div></li></ul></div></div></div><div id='method-_isWindowAlive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_isWindowAlive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_isWindowAlive' class='name expandable'>_isWindowAlive</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Checks whether the window is alive or not ...</div><div class='long'><p>Checks whether the window is alive or not</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns <code>true</code> if the window is alive, <code>false</code> otherwise</p>\n</div></li></ul></div></div></div><div id='method-_onPostMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_onPostMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_onPostMessage' class='name expandable'>_onPostMessage</a>( <span class='pre'>event</span> ) : void<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Callback for post message events. ...</div><div class='long'><p>Callback for post message events. If and only of the event has been\ngenerated from the opened popup window, it propagates it to the configured\npost message handler (<code>config.onPostMessage</code>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Event<div class='sub-desc'><p>The postMessage event</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_serializeFeatureValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_serializeFeatureValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_serializeFeatureValue' class='name expandable'>_serializeFeatureValue</a>( <span class='pre'>value</span> ) : string<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Converts a config value into a value compatible with window.open. ...</div><div class='long'><p>Converts a config value into a value compatible with <code>window.open</code>.\nIf value is a boolean, convert it to 'yes' or 'no', otherwise simply\ncasts it into a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : *<div class='sub-desc'><p>The value to convert</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'><p>The converted value</p>\n</div></li></ul></div></div></div><div id='method-_startWatcher' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_startWatcher' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_startWatcher' class='name expandable'>_startWatcher</a>( <span class='pre'></span> ) : void<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Starts the popup window watcher. ...</div><div class='long'><p>Starts the popup window watcher.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_stopWatcher' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-_stopWatcher' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-_stopWatcher' class='name expandable'>_stopWatcher</a>( <span class='pre'></span> ) : void<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Stops the popup window watcher. ...</div><div class='long'><p>Stops the popup window watcher.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-close' class='name expandable'>close</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the popup window. ...</div><div class='long'><p>Closes the popup window.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isOpen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-isOpen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-isOpen' class='name expandable'>isOpen</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the window is open or not ...</div><div class='long'><p>Checks whether the window is open or not</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns <code>true</code> if the window is opened, <code>false</code> otherwise.</p>\n</div></li></ul></div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-open' class='name expandable'>open</a>( <span class='pre'></span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a new popup window. ...</div><div class='long'><p>Opens a new popup window.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>Returns a new <code>Promise</code> object. This promise will be:\n                  - rejected with <code>\"blocked\"</code> message if the popup window\n                    does not open for any reason (popup blocker, etc...)\n                  - rejected with <code>\"closed\"</code> if closed either manually by\n                    the user, or programatically\n                  - rejected with the given error if the web page opened in\n                    the popup sends a post message with a <code>error</code> data field.\n                  - resolved with the given data if the web page opened in\n                    the popup sends a post message without a <code>error</code> data\n                    field.</p>\n</div></li></ul></div></div></div><div id='method-setURI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-method-setURI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-method-setURI' class='name expandable'>setURI</a>( <span class='pre'>uri</span> ) : <a href=\"#!/api/PromiseWindow\" rel=\"PromiseWindow\" class=\"docClass\">PromiseWindow</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Changes the URI ...</div><div class='long'><p>Changes the URI</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : String<div class='sub-desc'><p>The new URI</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/PromiseWindow\" rel=\"PromiseWindow\" class=\"docClass\">PromiseWindow</a></span><div class='sub-desc'><p>Returns this object to allow chaining</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Error</span><div class='sub-desc'><p>If the window is open</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-getAPlusPromiseProvider' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-static-method-getAPlusPromiseProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-static-method-getAPlusPromiseProvider' class='name expandable'>getAPlusPromiseProvider</a>( <span class='pre'>CustomPromise</span> ) : Function<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create a Promise provider from a Promise/A+ constructor to be used with\nconfig.promiseProvider. ...</div><div class='long'><p>Create a Promise provider from a Promise/A+ constructor to be used with\n<code>config.promiseProvider</code>.</p>\n\n<pre><code>new PromiseWindow(..., {\n  ...,\n  promiseProvider: <a href=\"#!/api/PromiseWindow-static-method-getAPlusPromiseProvider\" rel=\"PromiseWindow-static-method-getAPlusPromiseProvider\" class=\"docClass\">PromiseWindow.getAPlusPromiseProvider</a>(MyCustomPromise)\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>CustomPromise</span> : Function<div class='sub-desc'><p>Promise/A+ contructor</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>Returns a promise provider</p>\n</div></li></ul></div></div></div><div id='static-method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='PromiseWindow'>PromiseWindow</span><br/><a href='source/promise-window.html#PromiseWindow-static-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/PromiseWindow-static-method-open' class='name expandable'>open</a>( <span class='pre'>uri, config</span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Convenience method for:\n\nnew PromiseWindow(uri, config).open()\n\n\nUse this method only if you never need to close the ...</div><div class='long'><p>Convenience method for:</p>\n\n<pre><code>new PromiseWindow(uri, config).open()\n</code></pre>\n\n<p>Use this method only if you never need to close the window programatically.\nIf you do, please consider using the classic way:</p>\n\n<pre><code>var w = new PromiseWindow(uri, config)\nw.open();\n// ...\nw.close();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>Returns a Promise equivalent to the one returned by <code>open()</code></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});